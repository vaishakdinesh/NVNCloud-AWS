{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "csye6225 cloudformation application stack",

  "Parameters": {

  		"DBName": {
  			"Description": "Database Name",
  			"Type": "String"
  		},
  		"DBUser": {
  			"Description": "Database User",
  			"Type": "String"
  		},
  		"DBPassword": {
  			"Description": "Database Password",
  			"Type": "String"
  		},
  		"bucketName": {
  			"Description": "Bucket name",
  			"Type": "String"
  		},
      "DBEngine": {
        "Description": "DB Engine",
  			"Type": "String"
      },
      "DBAllocatedStorage": {
        "Description": "DB AllocatedStorage",
  			"Type": "String"
      },
      "DBEngineVersion": {
        "Description": "DB EngineVersion",
  			"Type": "String"
      },
      "DBInstanceClass": {
        "Description": "DB InstanceClass",
  			"Type": "String"
      },
      "DBInstanceIdentifier": {
        "Description": "DBInstanceIdentifier",
  			"Type": "String"
      },
      "EC2ImageId":{
        "Description": "EC2 ImageId",
  			"Type": "String"
      },
      "EC2InstanceType":{
        "Description": "EC2 InstanceType",
  			"Type": "String"
      },
      "EbsDeviceName" : {
        "Description": "Ebs DeviceName",
  			"Type": "String"
      },
      "EbsVolumeType" : {
        "Description": "Ebs VolumeType",
  			"Type": "String"
      },
      "EbsVolumeSize" : {
        "Description": "Ebs VolumeSize",
  			"Type": "Number"
      },
      "KeyPairName" : {
        "Description": "Key Pair Name",
  			"Type": "String"
      },
      "AccessKeyId": {
			"Description": "Access key",
			"Type": "String"
  		},
  		"SecretAccessKey": {
  		"Description": "Secret key",
  		"Type": "String"
      },
      "MySqlClientPass":{
        "Description": "Root password for MySQL client on EC2 Instance",
        "Type": "String"
      }
    },


  "Resources" : {
    "NVNDynamoDBTable": {
  		      "Type": "AWS::DynamoDB::Table",
  		      "Properties": {
  			"AttributeDefinitions": [
  			  {
  			    "AttributeName": "Id",
  			    "AttributeType": "S"
  			  }
  			],
  			"KeySchema": [
  			  {
  			    "AttributeName": "Id",
  			    "KeyType": "HASH"
  			  }
  			],
  			"ProvisionedThroughput": {
  			  "ReadCapacityUnits": "5",
  			  "WriteCapacityUnits": "5"
  			},
        "TimeToLiveSpecification": {
          "AttributeName": "TimeToLive",
          "Enabled": "TRUE"
        },
  			"TableName": "csye6225"
  		      }
		    },
    "NVNCloudS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": { "Ref": "bucketName" }
            }
      },
      "NVNCloudS3BucketPolicy":{
        "Type" : "AWS::S3::BucketPolicy",
        "Properties" : {
          "Bucket" : {"Ref": "NVNCloudS3Bucket"},
          "PolicyDocument": {
            "Statement": [{
              "Action":["s3:GetObject"],
        	    "Effect":"Allow",
        	    "Resource": { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "bucketName" } , "/*" ]]},
        	    "Principal":"*",
              "Condition":{
                "StringLike":{
                  "aws:Referer":[
                    "*"
                  ]
                }
              }
              }]
          }
        }
      },
        "NVNCloudRDSDB": {
            "Type": "AWS::RDS::DBInstance",
            "Properties": {
              "Engine": { "Ref": "DBEngine"},
              "AllocatedStorage": { "Ref": "DBAllocatedStorage"},
              "EngineVersion": { "Ref": "DBEngineVersion"},
              "DBInstanceClass": { "Ref": "DBInstanceClass"},
              "MultiAZ": "false",
              "DBInstanceIdentifier": { "Ref": "DBInstanceIdentifier"},
              "MasterUsername": { "Ref": "DBUser" },
              "MasterUserPassword": { "Ref": "DBPassword" },
              "PubliclyAccessible": "false",
              "DBName": { "Ref": "DBName" },
              "VPCSecurityGroups": [{ "Fn::ImportValue" : "RDSGroupName" }],
              "DBSubnetGroupName": { "Fn::ImportValue" : "DBSubnetGroupName" }
            },
            "DeletionPolicy": "Delete"
          },

    "EC2Instance": {
    			"Type": "AWS::EC2::Instance",
          "Metadata":{
            "Comment": "create cloudwatch configuration file.",
            "AWS::CloudFormation::Init": {
            "files": {
            "/tmp/cwlogs/cwconfig.conf":{
              "content": {
                  "Fn::Join": [
                      "",
                      [
                          "[general]\n",
                          "state_file= /var/awslogs/agent-state\n",
                          "[/var/lib/tomcat8/logs/Csye6225-aws]\n",
                          "file = /var/lib/tomcat8/logs/Csye6225-aws\n",
                          "log_group_name = ", {"Ref": "WebServerLogGroup"}, "\n",
                          "log_stream_name = {instance_id}/apache.log\n",
                          "datetime_format = %d/%b/%Y:%H:%M:%S"
                      ]
                  ]
              },
              "mode": "000400",
              "owner": "apache",
              "group": "apache"
            },
            "/etc/cfn/cfn-hup.conf": {
                "content": {
                    "Fn::Join": [
                        "",
                        [
                            "[main]\n",
                            "stack=",
                            {
                                "Ref": "AWS::StackId"
                            },
                            "\n",
                            "region=",
                            {
                                "Ref": "AWS::Region"
                            },
                            "\n"
                        ]
                    ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
            },
            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                    "Fn::Join": [
                        "",
                        [
                            "[cfn-auto-reloader-hook]\n",
                            "triggers=post.update\n",
                            "path=Resources.WebServerHost.Metadata.AWS::CloudFormation::Init\n",
                            "action=/opt/aws/bin/cfn-init -s ",
                            {
                                "Ref": "AWS::StackId"
                            },
                            " -r EC2Instance ",
                            " --region     ",
                            {
                                "Ref": "AWS::Region"
                            },
                            "\n",
                            "runas=root\n"
                        ]
                    ]
                }
            }
            }
            }
            },
    			"Properties": {
    				"ImageId": { "Ref": "EC2ImageId" },
            "KeyName" : { "Ref": "KeyPairName" },
            "IamInstanceProfile" :{"Fn::ImportValue" : "EC2InstanceProfile"},
    				"InstanceType": { "Ref": "EC2InstanceType" },
            "SecurityGroupIds" : [ { "Fn::ImportValue" : "EC2GroupName"} ],
            "SubnetId" : { "Fn::ImportValue" :"PublicSubnet"},
            "Tags":[{
              "Key": "Name",
              "Value": "NVNCloudEC2"
              }],
            "UserData": {
                      "Fn::Base64": {
                          "Fn::Join": [
                              "",
                              [
                                  "#!/bin/bash -xe \n",
                                  "sudo apt-get update \n",
                                  "sudo apt-get install openjdk-8-jdk -y\n",
                                  "sudo apt-get install ruby -y \n",
                                  "sudo apt-get install wget -y \n",
                                  "sudo apt-get install python -y \n",
                                  "sudo apt-get update \n",
                                  "sudo apt-get install yum -y",
                                  "sudo wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install \n",
                                  "sudo chmod +x ./install \n",
                                  "sudo ./install auto \n",
                                  "sudo service codedeploy-agent start \n",
                                  "sudo apt-get install tomcat8 -y \n",
                                  "sudo yum install -y aws-cfn-bootstrap\n",
                                  "/opt/aws/bin/cfn-init -s ", { "Ref": "AWS::StackId" }, " -r EC2Instance ", " --region ", { "Ref": "AWS::Region" },
                                  " || error_exit 'Failed to run cfn-init'\n",
                                  "sudo wget https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py \n",
                                  "sudo python awslogs-agent-setup.py -n -r ", { "Ref" : "AWS::Region" }, " -c /tmp/cwlogs/cwconfig.conf || error_exit 'Failed to run CloudWatch Logs agent setup' \n",
                                  "sudo cd /etc/systemd/system \n",
                                  {
                                    "Fn::Join": [
                                        "",
                                        ["sudo cat << EOT > awslogs.service",
                                          "[Unit]",
                                          "Description=Service for CloudWatch Logs agent",
                                          "After=rc-local.service",

                                          "[Service]",
                                          "Type=simple",
                                          "Restart=always",
                                          "KillMode=process",
                                          "TimeoutSec=infinity",
                                          "PIDFile=/var/awslogs/state/awslogs.pid",
                                          "ExecStart=/var/awslogs/bin/awslogs-agent-launcher.sh --start --background --pidfile $PIDFILE --user awslogs --chuid awslogs &amp;",

                                          "[Install]",
                                          "WantedBy=multi-user.target",
                                          "EOT "
                                        ]
                                      ]
                                    },
                                  "sudo systemctl start awslogs.service \n",
                                  "sudo systemctl stop awslogs.service \n",
                                  "sudo systemctl restart awslogs.service \n",
                                  "sudo systemctl enable awslogs.service \n",
                                  "echo '#!/bin/sh' >> /usr/share/tomcat8/bin/setenv.sh \n",
                                  "sudo echo \"export JAVA_OPTS=\\\"\\$JAVA_OPTS -Dspring.profiles.active=aws\\\"\" >> /usr/share/tomcat8/bin/setenv.sh \n",
                                  {
                  									"Fn::Join": [
                  										"", [
                  											"echo ' export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.url=\"jdbc:mysql://",
                  											{
                  												"Fn::GetAtt": [
                  													"NVNCloudRDSDB",
                  													"Endpoint.Address"
                  												]
                  											},
                  											":3306/",
                  											{
                  												"Ref": "DBName"
                  											},
                  											"\"\"'>> /usr/share/tomcat8/bin/setenv.sh \n"
                  										]
                  									]
                  								},
                  								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.username=\"",
                  								{
                  									"Ref": "DBUser"
                  								},
                  								"\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                  								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Dspring.datasource.password=\"",
                  								{
                  									"Ref": "DBPassword"
                  								},
                  								"\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                  								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Damazon.s3.default-bucket=\"",
                  								{
                  									"Ref": "bucketName"
                  								},
                                  "\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                                  "echo 'export JAVA_OPTS=\"$JAVA_OPTS -Daws.access-key-id=\"",
                  								{
                  									"Ref": "AccessKeyId"
                  								},
                  								"\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                  								"echo 'export JAVA_OPTS=\"$JAVA_OPTS -Daws.access-secret-key=\"",
                  								{
                  									"Ref": "SecretAccessKey"
                  								},
                                  "\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
                                  "echo 'export JAVA_OPTS=\"$JAVA_OPTS -Damazon.sns.topic=\"",
                  								{
                  									"Ref": "SNSPasswordResetTopic"
                  								},
                                  "\"\"' >> /usr/share/tomcat8/bin/setenv.sh \n",
								                  "chmod +x /usr/share/tomcat8/bin/setenv.sh \n",
                                  "sudo service tomcat8 restart \n",
                                  {
                                    "Fn::Join":[
                                      "",[
                                        "sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password ",
                                        {"Ref": "MySqlClientPass"},
                                        "'\" \n"
                                      ]
                                    ]
                                  },
                                  {
                                    "Fn::Join":[
                                      "",[
                                        "sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password ",
                                        {"Ref": "MySqlClientPass"},
                                        "'\" \n"
                                      ]
                                    ]
                                  },
                                  "sudo apt-get -y install mysql-server \n"
                              ]
                          ]
                      }
                  },
            "BlockDeviceMappings": [
                 {
                     "DeviceName" : { "Ref": "EbsDeviceName"},
                     "Ebs" : {
                        "VolumeType" : { "Ref": "EbsVolumeType"},
                        "VolumeSize" :{ "Ref": "EbsVolumeSize"},
                        "DeleteOnTermination" : false
                    }
                 }
             ]
          }
        },
        "WebServerLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                  "RetentionInDays": 7
              }
          },
        "SNSPasswordResetTopic":{
          "Type" : "AWS::SNS::Topic",
          "Properties" : {
            "DisplayName" : "forgotPassword",
            "TopicName" : "forgotPassword"
          }
        }
      },
      "Outputs": {
        "WebAppS3BucketName": {
          "Description": "Web Application S3 Bucket Name",
          "Value": { "Ref": "NVNCloudS3Bucket"},
          "Export" : { "Name" : "WebAppS3BucketName" }
        },
        "EC2Instance": {
          "Description": "EC2 Instance",
          "Value": { "Ref": "EC2Instance"},
          "Export" : { "Name" : "EC2Instance" }
        },
        "SNSTopicARN": {
          "Description": "SNS Topic Arn",
          "Value": { "Ref": "SNSPasswordResetTopic"},
          "Export" : { "Name" : "SNSTopicARN" }
        }
      }
}
